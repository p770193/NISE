# -*- coding: utf-8 -*-
"""
Created on Fri Mar 27 00:57:52 2015

zeros for gauss hermite quadrature

key specifies the number of terms in the summation
the weights are symmetric (i.e. w_1 = w_-1), so only non-negative weights 
are given

@author: Dan
"""
import numpy as np
quad = {
# first four are analytic zeros, 
# from http://mathworld.wolfram.com/Hermite-GaussQuadrature.html
1 : [
        [0,                 np.sqrt(np.pi)]
    ],
2 : [
        [np.sqrt(2)/2.,     0.5 * np.sqrt(np.pi)]
    ],
3 : [
        [0,                 2/3. * np.sqrt(np.pi)],
        [0.5 * np.sqrt(6),  1/6. * np.sqrt(np.pi)]
    ],
4 : [
        [np.sqrt((3-np.sqrt(6))/2), np.sqrt(np.pi)/(4*(3-np.sqrt(6)))],
        [np.sqrt((3+np.sqrt(6))/2), np.sqrt(np.pi)/(4*(3+np.sqrt(6)))]
    ],
5 : [
        [0,              0.945308720483],
        [0.958572464614, 0.393619323152],
        [2.020182870456, 0.0199532420590]
    ],
6 : [
        [0.436077412,     0.724629595],
        [1.335849074,     0.157067320],
        [2.350604974,     0.00453000990]
    ],
7 : [
        [0,               0.81026461],
        [0.816287883,     0.425607253],
        [1.673551629,     0.0545155828],
        [2.651961357,     0.000971781258]
    ],
8 : [
        [0.381186990,     0.661147013],
        [1.157193712,     0.207802326],
        [1.981656757,     0.0170779830],
        [2.930637420,     0.000199604071]
    ],
9 : [
        [0,                 0.72023521],
        [0.723551019,       0.432651559],
        [1.468553289,     0.0884745274],
        [2.266580585,     0.00494362428],
        [3.190993202,     0.0000396069774]
    ],
10: [
        [0.342901327,     0.610862634],
        [1.036610830,     0.240138611],
        [1.756683649,     0.0338743945],
        [2.532731674,     0.00134364577],
        [3.436159119,     0.00000764043286]
    ],
11: [
      [0,                 0.6547592869],
      [0.6568095668,      0.4293597523561],
	[1.326557084494933, 0.1172278751677],
	[2.025948015825755, 0.1191139544491e-1],
	[2.783290099781625, 0.3468194663233e-3],
	[3.668470846559583, 0.1439560393714e-5]
    ],
12: [
	[0.314240376254395, 0.5701352362625],
	[0.947788391240164, 0.2604923102642],
	[1.597682635152605, 0.5160798561588e-1],
	[2.279507080501060, 0.3905390584629e-2],
	[3.020637025120890, 0.8573687043588e-4],
	[3.889724897869782, 0.2658551684356e-6],
    ],
13: [
	[0,                 0.6043931879211],
	[0.605763879171060, 0.4216162968985],
	[1.220055036590748, 0.1403233206870],
	[1.853107651601512, 0.2086277529617e-1],
	[2.519735685678238, 0.1207459992719e-2],
	[3.246608978372410, 0.2043036040271e-4],
	[4.101337596178640, 0.4825731850073e-7]
    ],
14: [
	[0.29174551067256, 0.5364059097121],
	[0.87871378732940, 0.2731056090642],
	[1.47668273114114, 0.6850553422347e-1],
	[2.09518325850772, 0.7850054726458e-2],
	[2.74847072498540, 0.3550926135519e-3],
	[3.46265693360227, 0.4716484355019e-5],
	[4.30444857047363, 0.8628591168125e-8]
    ],
15: [
	[0,                  0.5641003087264],
	[0.56506958325558, 0.4120286874989],
	[1.13611558521092, 0.1584889157959],
	[1.71999257518649, 0.3078003387255e-1],
	[2.32573248617386, 0.2778068842913e-2],
	[2.96716692790560, 0.1000044412325e-3],
	[3.66995037340445, 0.1059115547711e-5],
	[4.49999070730939, 0.1522475804254e-8]
    ],
20: [
	[0.2453407083009, 0.4722436696006],
	[0.7374737285454, 0.2866755053628],
	[1.2340762153953, 0.1090172060200],
	[1.7385377121166, 0.2481052088746e-1],
	[2.2549740020893, 0.3243773342238e-2],
	[2.7888060584281, 0.2283386360163e-3],
	[3.3478545673832, 0.7802556478532e-5],
	[3.9447640401156, 0.1086069370769e-6],
	[4.6036824495507, 0.4399340992273e-9],
	[5.3874808900122, 0.2229393645534e-12]
    ],
32: [
        [0.194840741569, 	0.375238352593],
        [0.584978765436, 	0.277458142303],
        [0.97650046359, 	0.151269734077],
        [1.37037641095, 	0.0604581309559],
        [1.76765410946, 	0.0175534288315],
        [2.16949918361, 	0.00365489032677],
        [2.57724953773, 	0.000536268365495],
        [2.99249082501, 	5.41658405999E-005],
        [3.41716749282, 	3.65058512533E-006],
        [3.85375548542, 	1.5741677944E-007],
        [4.30554795347, 	4.09883215841E-009],
        [4.77716450334, 	5.93329148347E-011],
        [5.27555098664, 	4.21501019491E-013],
        [5.81222594946, 	1.19734401957E-015],
        [6.40949814928, 	9.23173653482E-019],
        [7.12581390983, 	7.31067642754E-023]
    ]
}

for key in quad.keys():
    quad[key] = np.array(quad[key]).T
    temp=None
    if key % 2 == 1: # odd no. of points
        # odd number of points, so make mirror symmetry ignoring zero
        if quad[key].shape[1] > 1:
            temp = quad[key][:,1:].copy()
            temp[0] *= -1
    else:  #even no. of points
        temp = quad[key].copy()
        temp[0] *= -1
    quad[key] = np.hstack((temp,quad[key]))
    # order in node positions
    quad[key] = quad[key][:,quad[key][0].argsort()]
            
"""
quad = {
1 : [
        [0,                 1.772 453 850 906]
    ],
2 : [
        [np.sqrt(2)/2.,     0.886 226 925 453]
    ],
3 : [
        [0,                 1.181 635 900 60],
        [1.224 744 871 39,  0.295 408 975 15]
    ],
4 : [
        [0.524 647 623 275, 0.804 914 090 006],
        [1.650 680 123 886, 0.081 312 835 447 3]
    ],
5 : [
        [0,                 0.945 308 720 483],
        [0.958 572 464 614, 0.393 619 323 152],
        [2.020 182 870 456, 0.019 953 242 059 0]
    ],
6 : [
        [0.436 077 412,     0.724 629 595],
        [1.335 849 074,     0.157 067 320],
        [2.350 604 974,     0.004 530 009 90]
    ],
7 : [
        [0,                 0.810 264 61],
        [0.816 287 883,     0.425 607 253],
        [1.673 551 629,     0.054 515 582 8],
        [2.651 961 357,     0.000 971 781 258]
    ],
8 : [
        [0.381 186 990,     0.661 147 013],
        [1.157 193 712,     0.207 802 326],
        [1.981 656 757,     0.017 077 983 0],
        [2.930 637 420,     0.000 199 604 071]
    ],
9 : [
        [0,                 0.720 235 21],
        [0.723 551 019,     0.432 651 559],
        [1.468 553 289,     0.088 474 527 4],
        [2.266 580 585,     0.004 943 624 28],
        [3.190 993 202,     0.000 039 606 977 4]
    ],
10: [
        [0.342 901 327,     0.610 862 634],
        [1.036 610 830,     0.240 138 611],
        [1.756 683 649,     0.033 874 394 5],
        [2.532 731 674,     0.001 343 645 77],
        [3.436 159 119,     0.000 007 640 432 86]
    ],
11: [
        [0,                   0.654 759 286 9],
        [0.656 809 566 8,     0.42935 97523 561],
	[1.32655 70844 94933, 0.11722 78751 677],
	[2.02594 80158 25755, 0.11911 39544 491e-1],
	[2.78329 00997 81625, 0.34681 94663 233e-3],
	[3.66847 08465 59583, 0.14395 60393 714e-5]
    ],
12: [
	[0.31424 03762 54395, 0.57013 52362 625],
	[0.94778 83912 40164, 0.26049 23102 642],
	[1.59768 26351 52605, 0.51607 98561 588e-1],
	[2.27950 70805 01060, 0.39053 90584 629e-2],
	[3.02063 70251 20890, 0.85736 87043 588e-4],
	[3.88972 48978 69782, 0.26585 51684 356e-6],
    ],
13: [
	[0,		      0.60439 31879 211],
	[0.60576 38791 71060, 0.42161 62968 985],
	[1.22005 50365 90748, 0.14032 33206 870],
	[1.85310 76516 01512, 0.20862 77529 617e-1],
	[2.51973 56856 78238, 0.12074 59992 719e-2],
	[3.24660 89783 72410, 0.20430 36040 271e-4],
	[4.10133 75961 78640, 0.48257 31850 073e-7]
    ],
14: [
	[0.29174 55106 7256, 0.53640 59097 121],
	[0.87871 37873 2940, 0.27310 56090 642],
	[1.47668 27311 4114, 0.68505 53422 347e-1],
	[2.09518 32585 0772, 0.78500 54726 458e-2],
	[2.74847 07249 8540, 0.35509 26135 519e-3],
	[3.46265 69336 0227, 0.47164 84355 019e-5],
	[4.30444 85704 7363, 0.86285 91168 125e-8]
    ],
15: [
	[0,		     0.56410 03087 264],
	[0.56506 95832 5558, 0.41202 86874 989],
	[1.13611 55852 1092, 0.15848 89157 959],
	[1.71999 25751 8649, 0.30780 03387 255e-1],
	[2.32573 24861 7386, 0.27780 68842 913e-2],
	[2.96716 69279 0560, 0.10000 44412 325e-3],
	[3.66995 03734 0445, 0.10591 15547 711e-5],
	[4.49999 07073 0939, 0.15224 75804 254e-8]
    ],
20: [
	[0.24534 07083 009, 0.47224 36696 006],
	[0.73747 37285 454, 0.28667 55053 628],
	[1.23407 62153 953, 0.10901 72060 200],
	[1.73853 77121 166, 0.24810 52088 746e-1],
	[2.25497 40020 893, 0.32437 73342 238e-2],
	[2.78880 60584 281, 0.22833 86360 163e-3],
	[3.34785 45673 832, 0.78025 56478 532e-5],
	[3.94476 40401 156, 0.10860 69370 769e-6],
	[4.60368 24495 507, 0.43993 40992 273e-9],
	[5.38748 08900 122, 0.22293 93645 534e-12]
    ]
}
"""